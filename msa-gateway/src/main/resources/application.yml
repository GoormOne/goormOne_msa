server:
  port: 8080

spring:
  application:
    name: msa-gateway
  main:
    web-application-type: reactive
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "https://d841ly8p4kdic.cloudfront.net"
              - "https://howdy1227.com"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
            allowedHeaders:
              - "*"
            exposedHeaders:
              - "Authorization"
              - "Content-Type"
            allowCredentials: true
      # 서비스 디스커버리 자동 매핑(선택): http://gateway/<serviceId>/... 로 프록시
      # Eureka에 등록된 서비스 자동 프록시(초기 탐색 편함)
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      # 공통 필터
      default-filters:
        - RemoveResponseHeader=Server
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials Access-Control-Expose-Headers RETAIN_FIRST
        - name: RequestHeaderToRequestUri # 프록시 레벨 X-Forwarded-* 처리 개선(선택)
        - name: Retry
          args:
            retries: 2
            statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE,GATEWAY_TIMEOUT
            methods: GET

      # 라우트 정의
      routes:
        - id: msa-common-service
          uri: lb://MSA-COMMON-SERVICE
          predicates:
            - Path=/common/**
        - id: msa-user-service
          uri: lb://MSA-USER-SERVICE
          predicates:
            - Path=/users/**
        - id: msa-auth-service
          uri: lb://MSA-AUTH-SERVICE
          predicates:
            - Path=/auth/**
        - id: msa-store-service
          uri: lb://MSA-STORE-SERVICE
          predicates:
            - Path=/stores/**, /menus/**
#          # CircuitBreaker + fallback / RateLimiter: 게이트웨이 품질 안전장치
#          # RewritePath: 내부 서비스 경로 정리
#          # Actuator: /actuator/gateway/routes 등 관측
#          filters:
#            - StripPrefix=0
#            - name: CircuitBreaker
#              args:
#                name: storeCB
#                fallbackUri: forward:/__fallback/store
#            - name: RequestRateLimiter
#              args:
#                key-resolver: "#{@ipKeyResolver}"
#                redis-rate-limiter.replenishRate: 20   # 초당
#                redis-rate-limiter.burstCapacity: 40
#            - name: RewritePath
#              args:
#                regexp: "^/stores(?<segment>/?.*)"
#                replacement: "${segment}"

  # JWT 리소스 서버 (Cognito 사용 시)
  # issuer-uri만 맞추면 JWK 자동 로딩으로 서명 검증
  security:
    oauth2:
      resourceserver:
        jwt:
#          issuer-uri: https://ap-northeast-2uwu3tltzt.auth.ap-northeast-2.amazoncognito.com/oauth2
          issuer-uri: https://cognito-idp.ap-northeast-2.amazonaws.com/ap-northeast-2_UwU3TlTZt
  data:
    redis:
      host: localhost
      port: 6379

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: when_authorized

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/