server:
  port: 8080

spring:
  application:
    name: msa-gateway
  main:
    web-application-type: reactive
  # JWT 리소스 서버 (Cognito 사용 시)
  # issuer-uri만 맞추면 JWK 자동 로딩으로 서명 검증
  security:
    oauth2:
      resourceserver:
        jwt:
#          issuer-uri: https://ap-northeast-2uwu3tltzt.auth.ap-northeast-2.amazoncognito.com/oauth2
          issuer-uri: https://cognito-idp.ap-northeast-2.amazonaws.com/ap-northeast-2_UwU3TlTZt
#          또는 jwk-ser-uri: https://cognito-idp.ap-northeast-2.amazonaws.com/ap-northeast-2_UwU3TlTZt/.well-known/jwks.json
  cloud:
    gateway:
      # 라우트 정의
      routes:
#        - id: msa-common-service
#          uri: lb://MSA-COMMON-SERVICE
#          predicates:
#            - Path=/common/**
        - id: msa-user-service
          uri: lb://msa-user-service
          predicates:
            - Path=/users/**,/internal/users/**
          filters:
            - PreserveHostHeader
        - id: msa-auth-service
          uri: lb://msa-auth-service
          predicates:
            - Path=/auth/**,/internal/auth/**
          filters:
            - PreserveHostHeader

        - id: msa-store-service-docs
          uri: lb://MSA-STORE-SERVICE
          predicates:
            - Path=/stores/v3/api-docs/**,/stores/swagger-ui/**,/stores/swagger-ui.html
          filters:
            - PreserveHostHeader
            - StripPrefix=1
            - RemoveRequestHeader=Authorization
        - id: msa-store-service
          uri: lb://MSA-STORE-SERVICE
          predicates:
            - Path=/stores/**,/internal/stores/**
          filters:
            - PreserveHostHeader

        - id: msa-order-service-docs
          uri: lb://MSA-ORDER-SERVICE
          predicates:
            - Path=/orders/v3/api-docs/**,/orders/swagger-ui/**,/orders/swagger-ui.html
          filters:
            - PreserveHostHeader
            - StripPrefix=1
            - RemoveRequestHeader=Authorization
        - id: msa-order-service-api
          uri: lb://MSA-ORDER-SERVICE
          predicates:
            - Path=/carts/**,/orders/**,/internal/orders/**
          filters:
            - PreserveHostHeader

        - id: msa-payment-service-docs
          uri: lb://MSA-PAYMENT-SERVICE
          predicates:
            - Path=/payments/v3/api-docs/**,/payments/swagger-ui/**,/payments/swagger-ui.html,/tosspayment.html/**
          filters:
            - PreserveHostHeader
            - StripPrefix=1
            - RemoveRequestHeader=Authorization
        - id: msa-payment-service
          uri: lb://MSA-PAYMENT-SERVICE
          predicates:
            - Path=/payments/**,/internal/payments/**,/tosspayment.html/**
          filters:
            - PreserveHostHeader
      #          # CircuitBreaker + fallback / RateLimiter: 게이트웨이 품질 안전장치
#          # RewritePath: 내부 서비스 경로 정리
#          # Actuator: /actuator/gateway/routes 등 관측
#          filters:
#            - StripPrefix=0
#            - name: CircuitBreaker
#              args:
#                name: storeCB
#                fallbackUri: forward:/__fallback/store
#            - name: RequestRateLimiter
#              args:
#                key-resolver: "#{@ipKeyResolver}"
#                redis-rate-limiter.replenishRate: 20   # 초당
#                redis-rate-limiter.burstCapacity: 40
#            - name: RewritePath
#              args:
#                regexp: "^/stores(?<segment>/?.*)"
#                replacement: "${segment}"
      # 서비스 디스커버리 자동 매핑(선택): http://gateway/<serviceId>/... 로 프록시
      # Eureka에 등록된 서비스 자동 프록시(초기 탐색 편함)
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: when_authorized

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

gateway:
  user-resolver:
    base-url: http://msa-auth-service   # load-balanced(WebClient lb://)를 쓰고 싶다면 spring.cloud.loadbalancer 사용
    timeout-ms: 1500
    cache-ttl-sec: 60

cognito:
  expected-audience: 2ig0efqufk2ct3svjjevvp1709
  groups-claim: cognito:groups
  username-claim: cognito:username
  name-claim: name

springdoc:
  swagger-ui:
    path: /swagger-ui
    urls:
      - name: order-service
        url: /orders/v3/api-docs
      - name: payment-service
        url: /payments/v3/api-docs
      - name: store-service
        url: /stores/v3/api-docs
