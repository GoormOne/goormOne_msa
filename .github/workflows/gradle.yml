
name: CI/CD for MSA

on:
  push:
    branches: [ "release/1.0.0" ]

jobs:

  determine-changes:
    runs-on: ubuntu-latest
    outputs:

      services: ${{ steps.filter.outputs.changes }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed services
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            msa-store-service:
             - 'msa-store-service/**'

  build-and-deploy:

    needs: determine-changes

    if: needs.determine-changes.outputs.services != '[]'
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read

    strategy:
      matrix:
        service: ${{ fromJson(needs.determine-changes.outputs.services) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- AWS ECR 로그인 및 공통 설정 ---
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:

          role-to-assume: arn:aws:iam::490913547024:role/gitactionToECR
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      # --- Java, Gradle 설정 ---
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # --- Docker 이미지 빌드 및 푸시 ---
      - name: Build and push ${{ matrix.service }} image
        run: |
          # 해당 서비스만 build 하도록 설정
          chmod +x ./gradlew
          ./gradlew :${{ matrix.service }}:build
          # 3. Docker 이미지 빌드 및 푸시
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ matrix.service }}:${{ github.sha }} ./${{ matrix.service }}
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ matrix.service }}:${{ github.sha }}