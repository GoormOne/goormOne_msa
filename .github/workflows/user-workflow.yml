name: CI/CD for User Service

on:
  push:
    branches: [ "release/1.0.0" ]
    paths:
      - 'msa-user-service/**'

env:
  AWS_REGION: ap-northeast-2
  SERVICE_DIR: msa-user-service
  ECR_REPOSITORY: user-service
  CONTAINER_NAME: msa-user-service

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials for ECR
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::490913547024:role/gitactionToECR
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set short git commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build, tag, and push Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        run: |
          chmod +x ./gradlew && ./gradlew :${{ env.SERVICE_DIR }}:build --no-daemon
          docker buildx build --platform linux/amd64 \
            -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG \
            -f ./${{ env.SERVICE_DIR }}/Dockerfile . \
            --push
          echo "image_sha=$ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

  eks-setup:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Configure AWS credentials for EKS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::490913547024:role/gitactionToEKS
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup kubeconfig
        run: |
          aws eks update-kubeconfig --name Groom-EKS-Cluster --region ${{ env.AWS_REGION }}
          kubectl get nodes

  deploy-rollout:
    runs-on: ubuntu-latest
    needs: eks-setup
    steps:
      - name: Configure AWS credentials for EKS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::490913547024:role/gitactionToEKS
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to EKS
        env:
          IMAGE_SHA: ${{ needs.build-and-push-image.outputs.image_sha }}
        run: |
          kubectl argo rollouts set image user-service user-service=$IMAGE_SHA -n default
          kubectl argo rollouts get rollout user-service -n default