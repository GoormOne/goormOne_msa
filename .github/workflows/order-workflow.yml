
name: CI/CD for Order Service


on:
  push:
    branches: [ "release/1.0.0" ]
    paths:
      - 'msa-order-service/**'


env:
  AWS_REGION: ap-northeast-2
  SERVICE_DIR: msa-order-service
  ECR_REPOSITORY: order-service         # ECR 리포지토리 및 ECS 서비스 이름
  CONTAINER_NAME: msa-order-service     # Task Definition 안의 컨테이너 이름

# GitHub Actions Runner에 부여할   권한
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- AWS 인증 ---
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::490913547024:role/gitactionToECR
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # --- 커밋 SHA 태그 ---
      - name: Set short git commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # --- Docker 빌드 & ECR 푸시 ---
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        run: |
          chmod +x ./gradlew && ./gradlew :${{ env.SERVICE_DIR }}:build --no-daemon
          docker buildx build --platform linux/amd64 \
            -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG \
            -f ./${{ env.SERVICE_DIR }}/Dockerfile . \
            --push
          echo "image=$ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # --- ECS Task Definition 업데이트 ---
      - name: Render Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./${{ env.SERVICE_DIR }}/task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      # --- ECS 서비스 배포 ---
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECR_REPOSITORY }}
          cluster: DevCluster
          wait-for-service-stability: true