2025-09-03 17:32:20.331 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.347 [main] INFO  c.e.m.MsaOrderServiceApplication - Starting MsaOrderServiceApplication using Java 17.0.15 with PID 49177 (/Users/idong-gyu/goormOne_msa/msa-order-service/build/classes/java/main started by idong-gyu in /Users/idong-gyu/goormOne_msa)     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.348 [main] INFO  c.e.m.MsaOrderServiceApplication - The following 1 profile is active: "local"     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.799 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.800 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.917 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 113 ms. Found 5 JPA repository interfaces.     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.924 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.924 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.930 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.930 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.931 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderAuditRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.931 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.931 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=
2025-09-03 17:32:20.931 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.047 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=86e9dda9-bd0b-389a-84e1-f4dd1fb52b9d     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.161 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.163 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.265 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.271 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.272 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.272 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.303 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.303 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 940 ms     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.425 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.444 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.455 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.582 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.592 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.819 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2a9f7572     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.820 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.     [traceId= path= customerId= cartId=
2025-09-03 17:32:21.842 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)     [traceId= path= customerId= cartId=
2025-09-03 17:32:22.214 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)     [traceId= path= customerId= cartId=
2025-09-03 17:32:22.215 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'     [traceId= path= customerId= cartId=
2025-09-03 17:32:22.523 [main] INFO  org.redisson.Version - Redisson 3.50.0     [traceId= path= customerId= cartId=
2025-09-03 17:32:22.570 [main] WARN  i.n.r.d.DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'     [traceId= path= customerId= cartId=
2025-09-03 17:32:22.636 [redisson-netty-1-6] INFO  o.r.connection.ConnectionsHolder - 1 connections initialized for localhost/127.0.0.1:6379     [traceId= path= customerId= cartId=
2025-09-03 17:32:22.673 [redisson-netty-1-20] INFO  o.r.connection.ConnectionsHolder - 24 connections initialized for localhost/127.0.0.1:6379     [traceId= path= customerId= cartId=
2025-09-03 17:32:22.932 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.251 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.269 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.301 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.310 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.313 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.316 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.316 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.316 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.316 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.316 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.316 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.316 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.383 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.384 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.384 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.385 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1756888343384 with initial instances count: 3     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.387 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application MSA-ORDER-SERVICE with eureka with status UP     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.388 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1756888343388, current=UP, previous=STARTING]     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.388 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:a5a87636d8faee79d3c1725a44610dd0: registering service...     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.388 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.392 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.392 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.400 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:a5a87636d8faee79d3c1725a44610dd0 - registration status: 204     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.403 [main] INFO  c.e.m.MsaOrderServiceApplication - Started MsaOrderServiceApplication in 3.266 seconds (process running for 3.542)     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.570 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.570 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'     [traceId= path= customerId= cartId=
2025-09-03 17:32:23.571 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms     [traceId= path= customerId= cartId=
2025-09-03 17:32:37.962 [http-nio-8085-exec-2] ERROR c.e.c.e.GlobalExceptionHandler - [BUSINESS] code=4403 uri=/carts/add msg=장바구니 처리 중 충돌이 발생했습니다. detail=이미 장바구니에 담긴 메뉴입니다. customerId = cdc0085a-7928-4920-aa59-94f1d6cf1cef, storeId = 4c537d0c-8cbb-4c2b-bfb2-9fc559bdd6f9, cartId = dcba2662-cece-470f-acfe-1db329919cb1     [traceId= path= customerId= cartId=
com.example.common.exception.BusinessException: 장바구니 처리 중 충돌이 발생했습니다.
	at com.example.msaorderservice.cart.service.CartServiceImpl.lambda$addItem$1(CartServiceImpl.java:61)
	at java.base/java.util.Optional.ifPresent(Optional.java:178)
	at com.example.msaorderservice.cart.service.CartServiceImpl.addItem(CartServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.msaorderservice.cart.service.CartServiceImpl$$SpringCGLIB$$0.addItem(<generated>)
	at com.example.msaorderservice.cart.controller.CartController.addItem(CartController.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-03 17:33:23.116 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application MSA-ORDER-SERVICE with eureka with status DOWN     [traceId= path= customerId= cartId=
2025-09-03 17:33:23.116 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1756888403116, current=DOWN, previous=UP]     [traceId= path= customerId= cartId=
2025-09-03 17:33:23.117 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:a5a87636d8faee79d3c1725a44610dd0: registering service...     [traceId= path= customerId= cartId=
2025-09-03 17:33:23.133 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:a5a87636d8faee79d3c1725a44610dd0 - registration status: 204     [traceId= path= customerId= cartId=
2025-09-03 17:33:23.189 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'     [traceId= path= customerId= cartId=
2025-09-03 17:33:23.196 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...     [traceId= path= customerId= cartId=
2025-09-03 17:33:23.213 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.     [traceId= path= customerId= cartId=
2025-09-03 17:33:23.214 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...     [traceId= path= customerId= cartId=
2025-09-03 17:33:26.220 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...     [traceId= path= customerId= cartId=
2025-09-03 17:33:26.220 [DiscoveryClient-%d] WARN  c.n.discovery.TimedSupervisorTask - task supervisor shutting down, can't accept the task     [traceId= path= customerId= cartId=
2025-09-03 17:33:26.229 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:a5a87636d8faee79d3c1725a44610dd0 - deregister  status: 200     [traceId= path= customerId= cartId=
2025-09-03 17:33:26.229 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient     [traceId= path= customerId= cartId=
2025-09-03 17:33:28.041 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.058 [main] INFO  c.e.m.MsaOrderServiceApplication - Starting MsaOrderServiceApplication using Java 17.0.15 with PID 49219 (/Users/idong-gyu/goormOne_msa/msa-order-service/build/classes/java/main started by idong-gyu in /Users/idong-gyu/goormOne_msa)     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.059 [main] INFO  c.e.m.MsaOrderServiceApplication - The following 1 profile is active: "local"     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.568 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.568 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.683 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 112 ms. Found 5 JPA repository interfaces.     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.690 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.691 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.697 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.698 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.698 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderAuditRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.698 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.698 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.698 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.825 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=86e9dda9-bd0b-389a-84e1-f4dd1fb52b9d     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.965 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.     [traceId= path= customerId= cartId=]
2025-09-03 17:33:28.966 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.080 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.085 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.085 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.085 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.115 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.115 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1041 ms     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.239 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.259 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.270 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.394 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.403 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.612 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@799557c8     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.613 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.     [traceId= path= customerId= cartId=]
2025-09-03 17:33:29.637 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)     [traceId= path= customerId= cartId=]
2025-09-03 17:33:30.002 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)     [traceId= path= customerId= cartId=]
2025-09-03 17:33:30.003 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'     [traceId= path= customerId= cartId=]
2025-09-03 17:33:30.311 [main] INFO  org.redisson.Version - Redisson 3.50.0     [traceId= path= customerId= cartId=]
2025-09-03 17:33:30.356 [main] WARN  i.n.r.d.DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'     [traceId= path= customerId= cartId=]
2025-09-03 17:33:30.419 [redisson-netty-1-7] INFO  o.r.connection.ConnectionsHolder - 1 connections initialized for localhost/127.0.0.1:6379     [traceId= path= customerId= cartId=]
2025-09-03 17:33:30.456 [redisson-netty-1-20] INFO  o.r.connection.ConnectionsHolder - 24 connections initialized for localhost/127.0.0.1:6379     [traceId= path= customerId= cartId=]
2025-09-03 17:33:30.711 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.024 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.041 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.071 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.079 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.080 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.083 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.083 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.083 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.083 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.083 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.083 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.083 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.151 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.152 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.152 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.153 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1756888411152 with initial instances count: 2     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.155 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application MSA-ORDER-SERVICE with eureka with status UP     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.156 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1756888411156, current=UP, previous=STARTING]     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.156 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:b808ba3d4180c49e3530c52b383b2f6c: registering service...     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.156 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.160 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.160 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.169 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:b808ba3d4180c49e3530c52b383b2f6c - registration status: 204     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.172 [main] INFO  c.e.m.MsaOrderServiceApplication - Started MsaOrderServiceApplication in 3.295 seconds (process running for 3.523)     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.355 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.355 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'     [traceId= path= customerId= cartId=]
2025-09-03 17:33:31.356 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms     [traceId= path= customerId= cartId=]
2025-09-03 17:33:39.512 [http-nio-8085-exec-2] ERROR c.e.c.e.GlobalExceptionHandler - [BUSINESS] code=4403 uri=/carts/add msg=장바구니 처리 중 충돌이 발생했습니다. detail=이미 장바구니에 담긴 메뉴입니다. customerId = cdc0085a-7928-4920-aa59-94f1d6cf1cef, storeId = 4c537d0c-8cbb-4c2b-bfb2-9fc559bdd6f9, cartId = dcba2662-cece-470f-acfe-1db329919cb1     [traceId= path= customerId= cartId=]
com.example.common.exception.BusinessException: 장바구니 처리 중 충돌이 발생했습니다.
	at com.example.msaorderservice.cart.service.CartServiceImpl.lambda$addItem$1(CartServiceImpl.java:61)
	at java.base/java.util.Optional.ifPresent(Optional.java:178)
	at com.example.msaorderservice.cart.service.CartServiceImpl.addItem(CartServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.msaorderservice.cart.service.CartServiceImpl$$SpringCGLIB$$0.addItem(<generated>)
	at com.example.msaorderservice.cart.controller.CartController.addItem(CartController.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-03 17:34:49.033 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application MSA-ORDER-SERVICE with eureka with status DOWN     [traceId= path= customerId= cartId=]
2025-09-03 17:34:49.035 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1756888489035, current=DOWN, previous=UP]     [traceId= path= customerId= cartId=]
2025-09-03 17:34:49.035 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:b808ba3d4180c49e3530c52b383b2f6c: registering service...     [traceId= path= customerId= cartId=]
2025-09-03 17:34:49.044 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:b808ba3d4180c49e3530c52b383b2f6c - registration status: 204     [traceId= path= customerId= cartId=]
2025-09-03 17:34:49.154 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'     [traceId= path= customerId= cartId=]
2025-09-03 17:34:49.156 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...     [traceId= path= customerId= cartId=]
2025-09-03 17:34:49.175 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.     [traceId= path= customerId= cartId=]
2025-09-03 17:34:49.175 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...     [traceId= path= customerId= cartId=]
2025-09-03 17:34:52.178 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...     [traceId= path= customerId= cartId=]
2025-09-03 17:34:52.186 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:b808ba3d4180c49e3530c52b383b2f6c - deregister  status: 200     [traceId= path= customerId= cartId=]
2025-09-03 17:34:52.187 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient     [traceId= path= customerId= cartId=]
2025-09-03 17:34:54.369 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final     [traceId= path= customerId= cartId=]
2025-09-03 17:34:54.385 [main] INFO  c.e.m.MsaOrderServiceApplication - Starting MsaOrderServiceApplication using Java 17.0.15 with PID 49259 (/Users/idong-gyu/goormOne_msa/msa-order-service/build/classes/java/main started by idong-gyu in /Users/idong-gyu/goormOne_msa)     [traceId= path= customerId= cartId=]
2025-09-03 17:34:54.386 [main] INFO  c.e.m.MsaOrderServiceApplication - The following 1 profile is active: "local"     [traceId= path= customerId= cartId=]
2025-09-03 17:34:54.891 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode     [traceId= path= customerId= cartId=]
2025-09-03 17:34:54.891 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.007 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 112 ms. Found 5 JPA repository interfaces.     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.015 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.015 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.022 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.022 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.022 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderAuditRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.022 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.022 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.022 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.136 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=86e9dda9-bd0b-389a-84e1-f4dd1fb52b9d     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.256 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.257 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.355 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.359 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.360 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.360 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.384 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.385 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 984 ms     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.511 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.530 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.540 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.665 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.674 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.875 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@227c0cf7     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.876 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.     [traceId= path= customerId= cartId=]
2025-09-03 17:34:55.898 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)     [traceId= path= customerId= cartId=]
2025-09-03 17:34:56.265 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)     [traceId= path= customerId= cartId=]
2025-09-03 17:34:56.266 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'     [traceId= path= customerId= cartId=]
2025-09-03 17:34:56.573 [main] INFO  org.redisson.Version - Redisson 3.50.0     [traceId= path= customerId= cartId=]
2025-09-03 17:34:56.615 [main] WARN  i.n.r.d.DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'     [traceId= path= customerId= cartId=]
2025-09-03 17:34:56.687 [redisson-netty-1-7] INFO  o.r.connection.ConnectionsHolder - 1 connections initialized for localhost/127.0.0.1:6379     [traceId= path= customerId= cartId=]
2025-09-03 17:34:56.722 [redisson-netty-1-20] INFO  o.r.connection.ConnectionsHolder - 24 connections initialized for localhost/127.0.0.1:6379     [traceId= path= customerId= cartId=]
2025-09-03 17:34:56.974 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.290 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.309 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.341 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.350 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.351 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.354 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.354 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.354 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.354 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.354 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.354 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.354 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.424 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.425 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.425 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.426 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1756888497425 with initial instances count: 3     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.429 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application MSA-ORDER-SERVICE with eureka with status UP     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.429 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1756888497429, current=UP, previous=STARTING]     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.429 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:c90e4aa42ed64dbe30bf71f02d438739: registering service...     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.429 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.433 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.434 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.442 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:c90e4aa42ed64dbe30bf71f02d438739 - registration status: 204     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.445 [main] INFO  c.e.m.MsaOrderServiceApplication - Started MsaOrderServiceApplication in 3.257 seconds (process running for 3.5)     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.637 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.637 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'     [traceId= path= customerId= cartId=]
2025-09-03 17:34:57.638 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms     [traceId= path= customerId= cartId=]
2025-09-03 17:35:02.701 [http-nio-8085-exec-2] ERROR c.e.c.e.GlobalExceptionHandler - [BUSINESS] code=4403 uri=/carts/add msg=장바구니 처리 중 충돌이 발생했습니다. detail=이미 장바구니에 담긴 메뉴입니다. customerId = cdc0085a-7928-4920-aa59-94f1d6cf1cef, storeId = 4c537d0c-8cbb-4c2b-bfb2-9fc559bdd6f9, cartId = dcba2662-cece-470f-acfe-1db329919cb1     [traceId= path= customerId= cartId=]
com.example.common.exception.BusinessException: 장바구니 처리 중 충돌이 발생했습니다.
	at com.example.msaorderservice.cart.service.CartServiceImpl.lambda$addItem$1(CartServiceImpl.java:61)
	at java.base/java.util.Optional.ifPresent(Optional.java:178)
	at com.example.msaorderservice.cart.service.CartServiceImpl.addItem(CartServiceImpl.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.msaorderservice.cart.service.CartServiceImpl$$SpringCGLIB$$0.addItem(<generated>)
	at com.example.msaorderservice.cart.controller.CartController.addItem(CartController.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-03 17:39:56.914 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application MSA-ORDER-SERVICE with eureka with status DOWN     [traceId= path= customerId= cartId=]
2025-09-03 17:39:56.915 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1756888796915, current=DOWN, previous=UP]     [traceId= path= customerId= cartId=]
2025-09-03 17:39:56.915 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:c90e4aa42ed64dbe30bf71f02d438739: registering service...     [traceId= path= customerId= cartId=]
2025-09-03 17:39:56.924 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:c90e4aa42ed64dbe30bf71f02d438739 - registration status: 204     [traceId= path= customerId= cartId=]
2025-09-03 17:39:57.037 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'     [traceId= path= customerId= cartId=]
2025-09-03 17:39:57.040 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...     [traceId= path= customerId= cartId=]
2025-09-03 17:39:57.061 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.     [traceId= path= customerId= cartId=]
2025-09-03 17:39:57.061 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...     [traceId= path= customerId= cartId=]
2025-09-03 17:39:57.360 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration     [traceId= path= customerId= cartId=]
2025-09-03 17:40:00.067 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...     [traceId= path= customerId= cartId=]
2025-09-03 17:40:00.067 [DiscoveryClient-%d] WARN  c.n.discovery.TimedSupervisorTask - task supervisor shutting down, can't accept the task     [traceId= path= customerId= cartId=]
2025-09-03 17:40:00.076 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:c90e4aa42ed64dbe30bf71f02d438739 - deregister  status: 200     [traceId= path= customerId= cartId=]
2025-09-03 17:40:00.076 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient     [traceId= path= customerId= cartId=]
2025-09-03 17:40:02.885 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final     [traceId= path= customerId= cartId=]
2025-09-03 17:40:02.902 [main] INFO  c.e.m.MsaOrderServiceApplication - Starting MsaOrderServiceApplication using Java 17.0.15 with PID 49450 (/Users/idong-gyu/goormOne_msa/msa-order-service/build/classes/java/main started by idong-gyu in /Users/idong-gyu/goormOne_msa)     [traceId= path= customerId= cartId=]
2025-09-03 17:40:02.903 [main] INFO  c.e.m.MsaOrderServiceApplication - The following 1 profile is active: "local"     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.517 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.519 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.747 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 219 ms. Found 5 JPA repository interfaces.     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.759 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.761 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.771 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.772 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.772 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderAuditRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.772 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.773 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.773 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.     [traceId= path= customerId= cartId=]
2025-09-03 17:40:03.928 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=86e9dda9-bd0b-389a-84e1-f4dd1fb52b9d     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.079 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.080 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.192 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.197 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.197 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.197 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.233 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.233 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1313 ms     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.391 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.412 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.424 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.530 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.540 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.787 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@55465bfc     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.787 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.     [traceId= path= customerId= cartId=]
2025-09-03 17:40:04.811 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)     [traceId= path= customerId= cartId=]
2025-09-03 17:40:05.195 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)     [traceId= path= customerId= cartId=]
2025-09-03 17:40:05.196 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'     [traceId= path= customerId= cartId=]
2025-09-03 17:40:05.503 [main] INFO  org.redisson.Version - Redisson 3.50.0     [traceId= path= customerId= cartId=]
2025-09-03 17:40:05.548 [main] WARN  i.n.r.d.DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'     [traceId= path= customerId= cartId=]
2025-09-03 17:40:05.612 [redisson-netty-1-7] INFO  o.r.connection.ConnectionsHolder - 1 connections initialized for localhost/127.0.0.1:6379     [traceId= path= customerId= cartId=]
2025-09-03 17:40:05.648 [redisson-netty-1-20] INFO  o.r.connection.ConnectionsHolder - 24 connections initialized for localhost/127.0.0.1:6379     [traceId= path= customerId= cartId=]
2025-09-03 17:40:05.903 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.220 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.239 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.270 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.279 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.281 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.284 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.284 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.284 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.284 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.284 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.284 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.284 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.358 [main] INFO  c.netflix.discovery.DiscoveryClient - The response status is 200     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.359 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.359 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.360 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1756888806359 with initial instances count: 2     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.362 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application MSA-ORDER-SERVICE with eureka with status UP     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.363 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1756888806363, current=UP, previous=STARTING]     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.363 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:c72ec49e1a222a55c793964e61fc4df6: registering service...     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.363 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.367 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.367 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.379 [main] INFO  c.e.m.MsaOrderServiceApplication - Started MsaOrderServiceApplication in 3.687 seconds (process running for 3.944)     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.380 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:c72ec49e1a222a55c793964e61fc4df6 - registration status: 204     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.651 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.651 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'     [traceId= path= customerId= cartId=]
2025-09-03 17:40:06.652 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms     [traceId= path= customerId= cartId=]
2025-09-03 17:40:11.608 [http-nio-8085-exec-2] ERROR c.e.c.e.GlobalExceptionHandler - [BUSINESS] code=4403 uri=/carts/add msg=장바구니 처리 중 충돌이 발생했습니다. detail=이미 장바구니에 담긴 메뉴입니다. customerId = cdc0085a-7928-4920-aa59-94f1d6cf1cef, storeId = 4c537d0c-8cbb-4c2b-bfb2-9fc559bdd6f9, cartId = dcba2662-cece-470f-acfe-1db329919cb1     [traceId= path= customerId= cartId=dcba2662-cece-470f-acfe-1db329919cb1]
com.example.common.exception.BusinessException: 장바구니 처리 중 충돌이 발생했습니다.
	at com.example.msaorderservice.cart.service.CartServiceImpl.lambda$addItem$1(CartServiceImpl.java:64)
	at java.base/java.util.Optional.ifPresent(Optional.java:178)
	at com.example.msaorderservice.cart.service.CartServiceImpl.addItem(CartServiceImpl.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.msaorderservice.cart.service.CartServiceImpl$$SpringCGLIB$$0.addItem(<generated>)
	at com.example.msaorderservice.cart.controller.CartController.addItem(CartController.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-03 17:41:31.649 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application MSA-ORDER-SERVICE with eureka with status DOWN     [traceId= path= customerId= cartId=]
2025-09-03 17:41:31.650 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1756888891650, current=DOWN, previous=UP]     [traceId= path= customerId= cartId=]
2025-09-03 17:41:31.650 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:c72ec49e1a222a55c793964e61fc4df6: registering service...     [traceId= path= customerId= cartId=]
2025-09-03 17:41:31.659 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:c72ec49e1a222a55c793964e61fc4df6 - registration status: 204     [traceId= path= customerId= cartId=]
2025-09-03 17:41:31.760 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'     [traceId= path= customerId= cartId=]
2025-09-03 17:41:31.763 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...     [traceId= path= customerId= cartId=]
2025-09-03 17:41:31.780 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.     [traceId= path= customerId= cartId=]
2025-09-03 17:41:31.781 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...     [traceId= path= customerId= cartId=]
2025-09-03 17:41:34.787 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...     [traceId= path= customerId= cartId=]
2025-09-03 17:41:34.799 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:c72ec49e1a222a55c793964e61fc4df6 - deregister  status: 200     [traceId= path= customerId= cartId=]
2025-09-03 17:41:34.800 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient     [traceId= path= customerId= cartId=]
2025-09-03 17:41:36.555 [background-preinit] INFO  o.h.validator.internal.util.Version - [cartId=]     HV000001: Hibernate Validator 8.0.1.Final
2025-09-03 17:41:36.573 [main] INFO  c.e.m.MsaOrderServiceApplication - [cartId=]     Starting MsaOrderServiceApplication using Java 17.0.15 with PID 49478 (/Users/idong-gyu/goormOne_msa/msa-order-service/build/classes/java/main started by idong-gyu in /Users/idong-gyu/goormOne_msa)
2025-09-03 17:41:36.573 [main] INFO  c.e.m.MsaOrderServiceApplication - [cartId=]     The following 1 profile is active: "local"
2025-09-03 17:41:37.081 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Multiple Spring Data modules found, entering strict repository configuration mode
2025-09-03 17:41:37.082 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03 17:41:37.204 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Finished Spring Data repository scanning in 118 ms. Found 5 JPA repository interfaces.
2025-09-03 17:41:37.210 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Multiple Spring Data modules found, entering strict repository configuration mode
2025-09-03 17:41:37.211 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-09-03 17:41:37.218 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - [cartId=]     Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-03 17:41:37.218 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - [cartId=]     Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-03 17:41:37.218 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - [cartId=]     Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderAuditRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-03 17:41:37.218 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - [cartId=]     Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-03 17:41:37.218 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - [cartId=]     Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-03 17:41:37.218 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-09-03 17:41:37.343 [main] INFO  o.s.cloud.context.scope.GenericScope - [cartId=]     BeanFactory id=86e9dda9-bd0b-389a-84e1-f4dd1fb52b9d
2025-09-03 17:41:37.479 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - [cartId=]     Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-09-03 17:41:37.480 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - [cartId=]     Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-09-03 17:41:37.580 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - [cartId=]     Tomcat initialized with port 8085 (http)
2025-09-03 17:41:37.584 [main] INFO  o.a.coyote.http11.Http11NioProtocol - [cartId=]     Initializing ProtocolHandler ["http-nio-8085"]
2025-09-03 17:41:37.585 [main] INFO  o.a.catalina.core.StandardService - [cartId=]     Starting service [Tomcat]
2025-09-03 17:41:37.585 [main] INFO  o.a.catalina.core.StandardEngine - [cartId=]     Starting Servlet engine: [Apache Tomcat/10.1.26]
2025-09-03 17:41:37.614 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - [cartId=]     Initializing Spring embedded WebApplicationContext
2025-09-03 17:41:37.614 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - [cartId=]     Root WebApplicationContext: initialization completed in 1025 ms
2025-09-03 17:41:37.737 [main] INFO  o.h.jpa.internal.util.LogHelper - [cartId=]     HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03 17:41:37.756 [main] INFO  org.hibernate.Version - [cartId=]     HHH000412: Hibernate ORM core version 6.5.2.Final
2025-09-03 17:41:37.766 [main] INFO  o.h.c.i.RegionFactoryInitiator - [cartId=]     HHH000026: Second-level cache disabled
2025-09-03 17:41:37.895 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - [cartId=]     No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03 17:41:37.905 [main] INFO  com.zaxxer.hikari.HikariDataSource - [cartId=]     HikariPool-1 - Starting...
2025-09-03 17:41:38.107 [main] INFO  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2e60d4f4
2025-09-03 17:41:38.108 [main] INFO  com.zaxxer.hikari.HikariDataSource - [cartId=]     HikariPool-1 - Start completed.
2025-09-03 17:41:38.131 [main] WARN  org.hibernate.orm.deprecation - [cartId=]     HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-03 17:41:38.577 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - [cartId=]     HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-03 17:41:38.578 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - [cartId=]     Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03 17:41:38.899 [main] INFO  org.redisson.Version - [cartId=]     Redisson 3.50.0
2025-09-03 17:41:38.948 [main] WARN  i.n.r.d.DnsServerAddressStreamProviders - [cartId=]     Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
2025-09-03 17:41:39.013 [redisson-netty-1-6] INFO  o.r.connection.ConnectionsHolder - [cartId=]     1 connections initialized for localhost/127.0.0.1:6379
2025-09-03 17:41:39.048 [redisson-netty-1-20] INFO  o.r.connection.ConnectionsHolder - [cartId=]     24 connections initialized for localhost/127.0.0.1:6379
2025-09-03 17:41:39.306 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - [cartId=]     Exposing 3 endpoints beneath base path '/actuator'
2025-09-03 17:41:39.612 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - [cartId=]     Eureka HTTP Client uses RestTemplate.
2025-09-03 17:41:39.630 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - [cartId=]     Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-03 17:41:39.661 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - [cartId=]     Setting initial instance status as: STARTING
2025-09-03 17:41:39.669 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Initializing Eureka in region us-east-1
2025-09-03 17:41:39.671 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 17:41:39.673 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Disable delta property : false
2025-09-03 17:41:39.673 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Single vip registry refresh property : null
2025-09-03 17:41:39.673 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Force full registry fetch : false
2025-09-03 17:41:39.673 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Application is null : false
2025-09-03 17:41:39.673 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Registered Applications size is zero : true
2025-09-03 17:41:39.673 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Application version is -1: true
2025-09-03 17:41:39.673 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Getting all instance registry info from the eureka server
2025-09-03 17:41:39.744 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     The response status is 200
2025-09-03 17:41:39.744 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Starting heartbeat executor: renew interval is: 30
2025-09-03 17:41:39.745 [main] INFO  c.n.discovery.InstanceInfoReplicator - [cartId=]     InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-03 17:41:39.745 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Discovery Client initialized at timestamp 1756888899745 with initial instances count: 3
2025-09-03 17:41:39.748 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - [cartId=]     Registering application MSA-ORDER-SERVICE with eureka with status UP
2025-09-03 17:41:39.748 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Saw local status change event StatusChangeEvent [timestamp=1756888899748, current=UP, previous=STARTING]
2025-09-03 17:41:39.749 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:54696ceb1488855365c8b74e6c89ccdf: registering service...
2025-09-03 17:41:39.749 [main] INFO  o.a.coyote.http11.Http11NioProtocol - [cartId=]     Starting ProtocolHandler ["http-nio-8085"]
2025-09-03 17:41:39.752 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - [cartId=]     Tomcat started on port 8085 (http) with context path '/'
2025-09-03 17:41:39.753 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - [cartId=]     Updating port to 8085
2025-09-03 17:41:39.762 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:54696ceb1488855365c8b74e6c89ccdf - registration status: 204
2025-09-03 17:41:39.764 [main] INFO  c.e.m.MsaOrderServiceApplication - [cartId=]     Started MsaOrderServiceApplication in 3.392 seconds (process running for 3.636)
2025-09-03 17:41:39.873 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - [cartId=]     Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-03 17:41:39.874 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - [cartId=]     Initializing Servlet 'dispatcherServlet'
2025-09-03 17:41:39.876 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - [cartId=]     Completed initialization in 2 ms
2025-09-03 17:41:44.358 [http-nio-8085-exec-1] ERROR c.e.c.e.GlobalExceptionHandler - [cartId=dcba2662-cece-470f-acfe-1db329919cb1]     [BUSINESS] code=4403 uri=/carts/add msg=장바구니 처리 중 충돌이 발생했습니다. detail=이미 장바구니에 담긴 메뉴입니다. customerId = cdc0085a-7928-4920-aa59-94f1d6cf1cef, storeId = 4c537d0c-8cbb-4c2b-bfb2-9fc559bdd6f9, cartId = dcba2662-cece-470f-acfe-1db329919cb1
com.example.common.exception.BusinessException: 장바구니 처리 중 충돌이 발생했습니다.
	at com.example.msaorderservice.cart.service.CartServiceImpl.lambda$addItem$1(CartServiceImpl.java:64)
	at java.base/java.util.Optional.ifPresent(Optional.java:178)
	at com.example.msaorderservice.cart.service.CartServiceImpl.addItem(CartServiceImpl.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.example.msaorderservice.cart.service.CartServiceImpl$$SpringCGLIB$$0.addItem(<generated>)
	at com.example.msaorderservice.cart.controller.CartController.addItem(CartController.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-03 17:45:32.820 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - [cartId=]     Unregistering application MSA-ORDER-SERVICE with eureka with status DOWN
2025-09-03 17:45:32.821 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Saw local status change event StatusChangeEvent [timestamp=1756889132821, current=DOWN, previous=UP]
2025-09-03 17:45:32.821 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:54696ceb1488855365c8b74e6c89ccdf: registering service...
2025-09-03 17:45:32.829 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:54696ceb1488855365c8b74e6c89ccdf - registration status: 204
2025-09-03 17:45:32.889 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - [cartId=]     Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-03 17:45:32.896 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - [cartId=]     HikariPool-1 - Shutdown initiated...
2025-09-03 17:45:32.917 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - [cartId=]     HikariPool-1 - Shutdown completed.
2025-09-03 17:45:32.918 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Shutting down DiscoveryClient ...
2025-09-03 17:45:35.924 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Unregistering ...
2025-09-03 17:45:35.933 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:54696ceb1488855365c8b74e6c89ccdf - deregister  status: 200
2025-09-03 17:45:35.933 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Completed shut down of DiscoveryClient
2025-09-03 17:45:37.919 [background-preinit] INFO  o.h.validator.internal.util.Version - [cartId=]     HV000001: Hibernate Validator 8.0.1.Final
2025-09-03 17:45:37.937 [main] INFO  c.e.m.MsaOrderServiceApplication - [cartId=]     Starting MsaOrderServiceApplication using Java 17.0.15 with PID 49519 (/Users/idong-gyu/goormOne_msa/msa-order-service/build/classes/java/main started by idong-gyu in /Users/idong-gyu/goormOne_msa)
2025-09-03 17:45:37.937 [main] INFO  c.e.m.MsaOrderServiceApplication - [cartId=]     The following 1 profile is active: "local"
2025-09-03 17:45:38.463 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Multiple Spring Data modules found, entering strict repository configuration mode
2025-09-03 17:45:38.464 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03 17:45:38.578 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Finished Spring Data repository scanning in 111 ms. Found 5 JPA repository interfaces.
2025-09-03 17:45:38.586 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Multiple Spring Data modules found, entering strict repository configuration mode
2025-09-03 17:45:38.587 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-09-03 17:45:38.594 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - [cartId=]     Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-03 17:45:38.594 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - [cartId=]     Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.cart.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-03 17:45:38.594 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - [cartId=]     Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderAuditRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-03 17:45:38.595 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - [cartId=]     Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-03 17:45:38.595 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - [cartId=]     Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.msaorderservice.order.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-03 17:45:38.595 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - [cartId=]     Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2025-09-03 17:45:38.721 [main] INFO  o.s.cloud.context.scope.GenericScope - [cartId=]     BeanFactory id=86e9dda9-bd0b-389a-84e1-f4dd1fb52b9d
2025-09-03 17:45:38.839 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - [cartId=]     Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-09-03 17:45:38.841 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - [cartId=]     Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-09-03 17:45:38.939 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - [cartId=]     Tomcat initialized with port 8085 (http)
2025-09-03 17:45:38.944 [main] INFO  o.a.coyote.http11.Http11NioProtocol - [cartId=]     Initializing ProtocolHandler ["http-nio-8085"]
2025-09-03 17:45:38.945 [main] INFO  o.a.catalina.core.StandardService - [cartId=]     Starting service [Tomcat]
2025-09-03 17:45:38.945 [main] INFO  o.a.catalina.core.StandardEngine - [cartId=]     Starting Servlet engine: [Apache Tomcat/10.1.26]
2025-09-03 17:45:38.976 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - [cartId=]     Initializing Spring embedded WebApplicationContext
2025-09-03 17:45:38.976 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - [cartId=]     Root WebApplicationContext: initialization completed in 1011 ms
2025-09-03 17:45:39.097 [main] INFO  o.h.jpa.internal.util.LogHelper - [cartId=]     HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03 17:45:39.118 [main] INFO  org.hibernate.Version - [cartId=]     HHH000412: Hibernate ORM core version 6.5.2.Final
2025-09-03 17:45:39.129 [main] INFO  o.h.c.i.RegionFactoryInitiator - [cartId=]     HHH000026: Second-level cache disabled
2025-09-03 17:45:39.251 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - [cartId=]     No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03 17:45:39.260 [main] INFO  com.zaxxer.hikari.HikariDataSource - [cartId=]     HikariPool-1 - Starting...
2025-09-03 17:45:39.475 [main] INFO  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d3faf1d
2025-09-03 17:45:39.476 [main] INFO  com.zaxxer.hikari.HikariDataSource - [cartId=]     HikariPool-1 - Start completed.
2025-09-03 17:45:39.498 [main] WARN  org.hibernate.orm.deprecation - [cartId=]     HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-03 17:45:39.888 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - [cartId=]     HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-03 17:45:39.889 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - [cartId=]     Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03 17:45:40.199 [main] INFO  org.redisson.Version - [cartId=]     Redisson 3.50.0
2025-09-03 17:45:40.251 [main] WARN  i.n.r.d.DnsServerAddressStreamProviders - [cartId=]     Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
2025-09-03 17:45:40.316 [redisson-netty-1-7] INFO  o.r.connection.ConnectionsHolder - [cartId=]     1 connections initialized for localhost/127.0.0.1:6379
2025-09-03 17:45:40.354 [redisson-netty-1-20] INFO  o.r.connection.ConnectionsHolder - [cartId=]     24 connections initialized for localhost/127.0.0.1:6379
2025-09-03 17:45:40.611 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - [cartId=]     Exposing 3 endpoints beneath base path '/actuator'
2025-09-03 17:45:40.926 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - [cartId=]     Eureka HTTP Client uses RestTemplate.
2025-09-03 17:45:40.945 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - [cartId=]     Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-03 17:45:40.975 [main] INFO  o.s.c.n.eureka.InstanceInfoFactory - [cartId=]     Setting initial instance status as: STARTING
2025-09-03 17:45:40.984 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Initializing Eureka in region us-east-1
2025-09-03 17:45:40.986 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 17:45:40.988 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Disable delta property : false
2025-09-03 17:45:40.988 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Single vip registry refresh property : null
2025-09-03 17:45:40.988 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Force full registry fetch : false
2025-09-03 17:45:40.988 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Application is null : false
2025-09-03 17:45:40.988 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Registered Applications size is zero : true
2025-09-03 17:45:40.988 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Application version is -1: true
2025-09-03 17:45:40.988 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Getting all instance registry info from the eureka server
2025-09-03 17:45:41.060 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     The response status is 200
2025-09-03 17:45:41.061 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Starting heartbeat executor: renew interval is: 30
2025-09-03 17:45:41.061 [main] INFO  c.n.discovery.InstanceInfoReplicator - [cartId=]     InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-03 17:45:41.062 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Discovery Client initialized at timestamp 1756889141062 with initial instances count: 3
2025-09-03 17:45:41.065 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry - [cartId=]     Registering application MSA-ORDER-SERVICE with eureka with status UP
2025-09-03 17:45:41.065 [main] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Saw local status change event StatusChangeEvent [timestamp=1756889141065, current=UP, previous=STARTING]
2025-09-03 17:45:41.065 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900: registering service...
2025-09-03 17:45:41.065 [main] INFO  o.a.coyote.http11.Http11NioProtocol - [cartId=]     Starting ProtocolHandler ["http-nio-8085"]
2025-09-03 17:45:41.069 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - [cartId=]     Tomcat started on port 8085 (http) with context path '/'
2025-09-03 17:45:41.069 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - [cartId=]     Updating port to 8085
2025-09-03 17:45:41.078 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900 - registration status: 204
2025-09-03 17:45:41.080 [main] INFO  c.e.m.MsaOrderServiceApplication - [cartId=]     Started MsaOrderServiceApplication in 3.351 seconds (process running for 3.717)
2025-09-03 17:45:41.231 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - [cartId=]     Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-03 17:45:41.231 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - [cartId=]     Initializing Servlet 'dispatcherServlet'
2025-09-03 17:45:41.232 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - [cartId=]     Completed initialization in 1 ms
2025-09-03 17:50:40.996 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 17:55:41.006 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 18:00:48.594 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m8s876ms).
2025-09-03 18:01:19.886 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 18:19:48.082 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m29s466ms).
2025-09-03 18:26:02.617 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m14s535ms).
2025-09-03 18:26:05.369 [DiscoveryClient-HeartbeatExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900 - Re-registering apps/MSA-ORDER-SERVICE
2025-09-03 18:26:05.370 [DiscoveryClient-HeartbeatExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900: registering service...
2025-09-03 18:26:05.376 [DiscoveryClient-HeartbeatExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900 - registration status: 204
2025-09-03 18:27:26.526 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m23s910ms).
2025-09-03 18:32:01.748 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m35s222ms).
2025-09-03 18:32:25.469 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - [cartId=]     HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@7d3faf1d (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-09-03 18:33:32.457 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - [cartId=]     HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@139e0475 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-09-03 18:34:10.066 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 18:37:15.904 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m33s894ms).
2025-09-03 18:38:26.338 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m10s433ms).
2025-09-03 18:42:49.598 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m23s261ms).
2025-09-03 18:46:54.079 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m32s922ms).
2025-09-03 18:47:37.710 [DiscoveryClient-HeartbeatExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900 - Re-registering apps/MSA-ORDER-SERVICE
2025-09-03 18:47:37.710 [DiscoveryClient-HeartbeatExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900: registering service...
2025-09-03 18:47:37.714 [DiscoveryClient-HeartbeatExecutor-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900 - registration status: 204
2025-09-03 18:48:05.463 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m11s384ms).
2025-09-03 18:48:37.343 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 18:52:54.413 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m16s467ms).
2025-09-03 18:55:05.792 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m11s379ms).
2025-09-03 18:58:24.247 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m15s309ms).
2025-09-03 18:58:56.403 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 19:01:25.254 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m29s865ms).
2025-09-03 19:03:22.970 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m25s439ms).
2025-09-03 19:04:29.851 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m6s881ms).
2025-09-03 19:08:47.298 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m17s447ms).
2025-09-03 19:09:42.917 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=55s618ms).
2025-09-03 19:12:30.545 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m47s629ms).
2025-09-03 19:15:17.812 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m47s267ms).
2025-09-03 19:25:01.315 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9m43s502ms).
2025-09-03 19:25:35.747 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 19:30:35.757 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 19:35:35.766 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 19:40:35.775 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 19:43:01.777 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - [cartId=]     HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@39d5b204 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-09-03 19:43:05.561 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - [cartId=]     HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@12463fc2 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-09-03 19:45:35.786 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 19:50:35.794 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 19:55:35.800 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:00:35.807 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:05:35.812 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:10:35.821 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:15:35.832 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:20:35.831 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:25:35.840 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:30:35.845 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:35:35.854 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:38:03.911 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - [cartId=]     HikariPool-1 - Retrograde clock change detected (housekeeper delta=27s872ms), soft-evicting connections from pool.
2025-09-03 20:40:33.729 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:45:33.733 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:50:33.737 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 20:55:33.745 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 21:00:33.749 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 21:05:33.756 [AsyncResolver-bootstrap-executor-%d] INFO  c.n.d.s.r.aws.ConfigClusterResolver - [cartId=]     Resolving eureka endpoints via configuration
2025-09-03 21:07:49.172 [SpringApplicationShutdownHook] INFO  o.s.c.n.e.s.EurekaServiceRegistry - [cartId=]     Unregistering application MSA-ORDER-SERVICE with eureka with status DOWN
2025-09-03 21:07:49.175 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Saw local status change event StatusChangeEvent [timestamp=1756901269175, current=DOWN, previous=UP]
2025-09-03 21:07:49.177 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900: registering service...
2025-09-03 21:07:49.214 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900 - registration status: 204
2025-09-03 21:07:49.553 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - [cartId=]     Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-03 21:07:49.566 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - [cartId=]     HikariPool-1 - Shutdown initiated...
2025-09-03 21:07:49.606 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - [cartId=]     HikariPool-1 - Shutdown completed.
2025-09-03 21:07:49.606 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Shutting down DiscoveryClient ...
2025-09-03 21:07:52.612 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Unregistering ...
2025-09-03 21:07:52.633 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - [cartId=]     Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:554)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 39 more

2025-09-03 21:07:52.633 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - [cartId=]     Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2025-09-03 21:07:52.642 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - [cartId=]     Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for "http://localhost:8761/eureka/apps/MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8761/eureka/apps/MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:554)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 40 more

2025-09-03 21:07:52.642 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - [cartId=]     Request execution failed with message: I/O error on DELETE request for "http://localhost:8761/eureka/apps/MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused
2025-09-03 21:07:52.642 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - [cartId=]     DiscoveryClient_MSA-ORDER-SERVICE/msa-order-service:2cf37c6408eae74714cf0d7658b91900 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-09-03 21:07:52.644 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - [cartId=]     Completed shut down of DiscoveryClient
