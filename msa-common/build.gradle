plugins {
	id "java-library"
	id "io.spring.dependency-management"
}

dependencies {
	// 라이브러리 공개 API에 스프링 타입을 노출한다면 api 로 선언
	// 라이브러리 안에서 외부에 공개할 타입은 api로, 내부 구현 의존성은 implementation으로 구분
	api "org.springframework:spring-context"
	api "org.springframework:spring-web"
	api "org.springframework.security:spring-security-web"
	api "org.springframework.security:spring-security-core"
	api 'org.springframework.boot:spring-boot-starter-web'
	api 'org.springframework.boot:spring-boot-starter-security'
	api 'org.springframework.boot:spring-boot-starter-oauth2-resource-server' // JWKS 파싱용
	api 'com.nimbusds:nimbus-jose-jwt:9.37' // 필요 시 직접 파싱

	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.12.5'

	// Lombok (컴파일 전용)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	compileOnly("jakarta.servlet:jakarta.servlet-api")
	compileOnly 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	testImplementation 'org.junit.jupiter:junit-jupiter'
}